/*! @sentry/integrations 6.19.7 (5b3a175) | https://github.com/getsentry/sentry-javascript */
!function(n){var e={};const o={};function t(){return"undefined"!=typeof window?window:"undefined"!=typeof self?self:o}const r=t(),c=["debug","info","warn","error","log","assert"];function s(n){const e=t();if(!("console"in e))return n();const o=e.console,r={};c.forEach((n=>{const t=o[n]&&o[n].__sentry_original__;n in e.console&&t&&(r[n]=o[n],o[n]=t)}));try{return n()}finally{Object.keys(r).forEach((n=>{o[n]=r[n]}))}}function i(){let n=!1;const e={enable:()=>{n=!0},disable:()=>{n=!1}};return c.forEach((o=>{e[o]=(...e)=>{n&&s((()=>{r.console[o](`Sentry Logger [${o}]:`,...e)}))}})),e}(function(n,e,o){const r=o||t(),c=r.__SENTRY__=r.__SENTRY__||{};c[n]||(c[n]=e())})("logger",i);class l{constructor(n){this.name=l.id,this.o=Object.assign({debugger:!1,stringify:!1},n)}setupOnce(n,e){n(((n,o)=>{const t=e().getIntegration(l);return t&&(t.o.debugger,s((()=>{t.o.stringify?(console.log(JSON.stringify(n,null,2)),o&&console.log(JSON.stringify(o,null,2))):(console.log(n),o&&console.log(o))}))),n}))}}for(var u in l.id="Debug",e.Debug=l,n.Sentry=n.Sentry||{},n.Sentry.Integrations=n.Sentry.Integrations||{},e)Object.prototype.hasOwnProperty.call(e,u)&&(n.Sentry.Integrations[u]=e[u])}(window);
//# sourceMappingURL=debug.es6.debug.min.js.map
