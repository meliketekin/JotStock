{"version":3,"file":"sessiontiming.es6.min.js","sources":["../src/sessiontiming.ts"],"sourcesContent":["import { Event, EventProcessor, Hub, Integration } from '@sentry/types';\n\n/** This function adds duration since Sentry was initialized till the time event was sent */\nexport class SessionTiming implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'SessionTiming';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = SessionTiming.id;\n\n  /** Exact time Client was initialized expressed in milliseconds since Unix Epoch. */\n  protected readonly _startTime: number = Date.now();\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(addGlobalEventProcessor: (callback: EventProcessor) => void, getCurrentHub: () => Hub): void {\n    addGlobalEventProcessor(event => {\n      const self = getCurrentHub().getIntegration(SessionTiming);\n      if (self) {\n        return self.process(event);\n      }\n      return event;\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public process(event: Event): Event {\n    const now = Date.now();\n\n    return {\n      ...event,\n      extra: {\n        ...event.extra,\n        ['session:start']: this._startTime,\n        ['session:duration']: now - this._startTime,\n        ['session:end']: now,\n      },\n    };\n  }\n}\n"],"names":["SessionTiming","constructor","this","id","Date","now","setupOnce","addGlobalEventProcessor","getCurrentHub","event","self","getIntegration","process","extra","_startTime"],"mappings":";4BAGaA,EAAbC,cASSC,UAAeF,EAAcG,GAGjBD,OAAqBE,KAAKC,MAKtCC,UAAUC,EAA6DC,GAC5ED,GAAwBE,IACtB,MAAMC,EAAOF,IAAgBG,eAAeX,GAC5C,OAAIU,EACKA,EAAKE,QAAQH,GAEfA,KAOJG,QAAQH,GACb,MAAMJ,EAAMD,KAAKC,MAEjB,sCACKI,IACHI,qCACKJ,EAAMI,QACT,gBAAmBX,KAAKY,EACxB,mBAAsBT,EAAMH,KAAKY,EACjC,cAAiBT,oBAnCTL,KAAa"}