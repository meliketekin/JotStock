/*! @sentry/integrations 6.19.2 (f49c509) | https://github.com/getsentry/sentry-javascript */
!function(t){var e={};const r=/^(\/?|)([\s\S]*?)((?:\.{1,2}|[^/]+?|)(\.[^./]*|))(?:[/]*)$/;function c(...t){let e="",r=!1;for(let c=t.length-1;c>=-1&&!r;c--){const n=c>=0?t[c]:"/";n&&(e=`${n}/${e}`,r="/"===n.charAt(0))}return e=function(t,e){let r=0;for(let e=t.length-1;e>=0;e--){const c=t[e];"."===c?t.splice(e,1):".."===c?(t.splice(e,1),r++):r&&(t.splice(e,1),r--)}if(e)for(;r--;r)t.unshift("..");return t}(e.split("/").filter((t=>!!t)),!r).join("/"),(r?"/":"")+e||"."}function n(t){let e=0;for(;e<t.length&&""===t[e];e++);let r=t.length-1;for(;r>=0&&""===t[r];r--);return e>r?[]:t.slice(e,r-e+1)}function s(t,e){let c=function(t){const e=r.exec(t);return e?e.slice(1):[]}(t)[2];return e&&c.substr(-1*e.length)===e&&(c=c.substr(0,c.length-e.length)),c}class o{constructor(t={}){this.name=o.id,this.t="app:///",this.o=t=>{if(!t.filename)return t;const e=/^[A-Z]:\\/.test(t.filename),r=/^\//.test(t.filename);if(e||r){const r=e?t.filename.replace(/^[A-Z]:/,"").replace(/\\/g,"/"):t.filename,o=this.i?function(t,e){t=c(t).substr(1),e=c(e).substr(1);const r=n(t.split("/")),s=n(e.split("/")),o=Math.min(r.length,s.length);let i=o;for(let t=0;t<o;t++)if(r[t]!==s[t]){i=t;break}let u=[];for(let t=i;t<r.length;t++)u.push("..");return u=u.concat(s.slice(i)),u.join("/")}(this.i,r):s(r);t.filename=`${this.t}${o}`}return t},t.root&&(this.i=t.root),t.prefix&&(this.t=t.prefix),t.iteratee&&(this.o=t.iteratee)}setupOnce(t,e){t((t=>{const r=e().getIntegration(o);return r?r.process(t):t}))}process(t){let e=t;return t.exception&&Array.isArray(t.exception.values)&&(e=this.u(e)),t.stacktrace&&(e=this.h(e)),e}u(t){try{return Object.assign(Object.assign({},t),{exception:Object.assign(Object.assign({},t.exception),{values:t.exception.values.map((t=>Object.assign(Object.assign({},t),{stacktrace:this.l(t.stacktrace)})))})})}catch(e){return t}}h(t){try{return Object.assign(Object.assign({},t),{stacktrace:this.l(t.stacktrace)})}catch(e){return t}}l(t){return Object.assign(Object.assign({},t),{frames:t&&t.frames&&t.frames.map((t=>this.o(t)))})}}for(var i in o.id="RewriteFrames",e.RewriteFrames=o,t.Sentry=t.Sentry||{},t.Sentry.Integrations=t.Sentry.Integrations||{},e)Object.prototype.hasOwnProperty.call(e,i)&&(t.Sentry.Integrations[i]=e[i])}(window);
//# sourceMappingURL=rewriteframes.es6.debug.min.js.map
