{"version":3,"file":"angular.es6.min.js","sources":["../../utils/src/global.ts","../src/angular.ts"],"sourcesContent":["/**\n * NOTE: In order to avoid circular dependencies, if you add a function to this module and it needs to print something,\n * you must either a) use `console.log` rather than the logger, or b) put your function elsewhere.\n */\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport { Integration } from '@sentry/types';\n\nimport { isNodeEnv } from './node';\n\n/** Internal */\ninterface SentryGlobal {\n  Sentry?: {\n    Integrations?: Integration[];\n  };\n  SENTRY_ENVIRONMENT?: string;\n  SENTRY_DSN?: string;\n  SENTRY_RELEASE?: {\n    id?: string;\n  };\n  __SENTRY__: {\n    globalEventProcessors: any;\n    hub: any;\n    logger: any;\n  };\n}\n\nconst fallbackGlobalObject = {};\n\n/**\n * Safely get global scope object\n *\n * @returns Global scope object\n */\nexport function getGlobalObject<T>(): T & SentryGlobal {\n  return (\n    isNodeEnv()\n      ? global\n      : typeof window !== 'undefined' // eslint-disable-line no-restricted-globals\n      ? window // eslint-disable-line no-restricted-globals\n      : typeof self !== 'undefined'\n      ? self\n      : fallbackGlobalObject\n  ) as T & SentryGlobal;\n}\n","import { Event, EventProcessor, Hub, Integration } from '@sentry/types';\nimport { getGlobalObject, isDebugBuild, logger } from '@sentry/utils';\n\n// See https://github.com/angular/angular.js/blob/v1.4.7/src/minErr.js\nconst angularPattern = /^\\[((?:[$a-zA-Z0-9]+:)?(?:[$a-zA-Z0-9]+))\\] (.*?)\\n?(\\S+)$/;\n\n/**\n * AngularJS integration\n *\n * Provides an $exceptionHandler for AngularJS\n */\nexport class Angular implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'AngularJS';\n\n  /**\n   * moduleName used in Angular's DI resolution algorithm\n   */\n  public static moduleName: string = 'ngSentry';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = Angular.id;\n\n  /**\n   * Angular's instance\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private readonly _angular: any;\n\n  /**\n   * ngSentry module instance\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private readonly _module: any;\n\n  /**\n   * Returns current hub.\n   */\n  private _getCurrentHub?: () => Hub;\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  public constructor(options: { angular?: any } = {}) {\n    isDebugBuild() && logger.log('You are still using the Angular integration, consider moving to @sentry/angular');\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-member-access\n    this._angular = options.angular || getGlobalObject<any>().angular;\n\n    if (!this._angular) {\n      isDebugBuild() && logger.error('AngularIntegration is missing an Angular instance');\n      return;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    this._module = this._angular.module(Angular.moduleName, []);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(_: (callback: EventProcessor) => void, getCurrentHub: () => Hub): void {\n    if (!this._module) {\n      return;\n    }\n\n    this._getCurrentHub = getCurrentHub;\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    this._module.config([\n      '$provide',\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      ($provide: any): void => {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        $provide.decorator('$exceptionHandler', ['$delegate', this._$exceptionHandlerDecorator.bind(this)]);\n      },\n    ]);\n  }\n\n  /**\n   * Angular's exceptionHandler for Sentry integration\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private _$exceptionHandlerDecorator($delegate: any): any {\n    return (exception: Error, cause?: string): void => {\n      const hub = this._getCurrentHub && this._getCurrentHub();\n\n      if (hub && hub.getIntegration(Angular)) {\n        hub.withScope(scope => {\n          if (cause) {\n            scope.setExtra('cause', cause);\n          }\n\n          scope.addEventProcessor((event: Event) => {\n            const ex = event.exception && event.exception.values && event.exception.values[0];\n\n            if (ex) {\n              const matches = angularPattern.exec(ex.value || '');\n\n              if (matches) {\n                // This type now becomes something like: $rootScope:inprog\n                ex.type = matches[1];\n                ex.value = matches[2];\n                event.message = `${ex.type}: ${ex.value}`;\n                // auto set a new tag specifically for the angular error url\n                event.extra = {\n                  ...event.extra,\n                  angularDocs: matches[3].substr(0, 250),\n                };\n              }\n            }\n\n            return event;\n          });\n\n          hub.captureException(exception);\n        });\n      }\n      $delegate(exception, cause);\n    };\n  }\n}\n"],"names":["fallbackGlobalObject","angularPattern","Angular","constructor","options","this","id","_angular","angular","window","self","_module","module","moduleName","setupOnce","_","getCurrentHub","_getCurrentHub","config","$provide","decorator","_$exceptionHandlerDecorator","bind","$delegate","exception","cause","hub","getIntegration","withScope","scope","setExtra","addEventProcessor","event","ex","values","matches","exec","value","type","message","extra","angularDocs","substr","captureException"],"mappings":";sBA4BA,MAAMA,EAAuB,GCxB7B,MAAMC,EAAiB,mEAOVC,EAqCXC,YAAmBC,EAA6B,IAvBzCC,UAAeH,EAAQI,GA2B5BD,KAAKE,EAAWH,EAAQI,UDbF,oBAAXC,OACPA,OACgB,oBAATC,KACPA,KACAV,GCSsDQ,QAErDH,KAAKE,IAMVF,KAAKM,EAAUN,KAAKE,EAASK,OAAOV,EAAQW,WAAY,KAMnDC,UAAUC,EAAuCC,GACjDX,KAAKM,IAIVN,KAAKY,EAAiBD,EAGtBX,KAAKM,EAAQO,OAAO,CAClB,WAECC,IAECA,EAASC,UAAU,oBAAqB,CAAC,YAAaf,KAAKgB,EAA4BC,KAAKjB,YAS1FgB,EAA4BE,GAClC,MAAO,CAACC,EAAkBC,KACxB,MAAMC,EAAMrB,KAAKY,GAAkBZ,KAAKY,IAEpCS,GAAOA,EAAIC,eAAezB,IAC5BwB,EAAIE,WAAUC,IACRJ,GACFI,EAAMC,SAAS,QAASL,GAG1BI,EAAME,mBAAmBC,IACvB,MAAMC,EAAKD,EAAMR,WAAaQ,EAAMR,UAAUU,QAAUF,EAAMR,UAAUU,OAAO,GAE/E,GAAID,EAAI,CACN,MAAME,EAAUlC,EAAemC,KAAKH,EAAGI,OAAS,IAE5CF,IAEFF,EAAGK,KAAOH,EAAQ,GAClBF,EAAGI,MAAQF,EAAQ,GACnBH,EAAMO,QAAU,GAAGN,EAAGK,SAASL,EAAGI,QAElCL,EAAMQ,qCACDR,EAAMQ,QACTC,YAAaN,EAAQ,GAAGO,OAAO,EAAG,QAKxC,OAAOV,KAGTN,EAAIiB,iBAAiBnB,MAGzBD,EAAUC,EAAWC,kBA5GXvB,KAAa,YAKbA,aAAqB"}