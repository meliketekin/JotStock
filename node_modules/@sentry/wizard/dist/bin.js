#!/usr/bin/env node
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
var Constants_1 = require("./lib/Constants");
var Setup_1 = require("./lib/Setup");
__exportStar(require("./lib/Setup"), exports);
var argv = require('yargs')
    .option('debug', {
    default: false,
    describe: 'Enable verbose logging\nenv: SENTRY_WIZARD_DEBUG',
    type: 'boolean',
})
    .option('uninstall', {
    default: false,
    describe: 'Revert project setup process\nenv: SENTRY_WIZARD_UNINSTALL',
    type: 'boolean',
})
    .option('skip-connect', {
    default: false,
    describe: 'Skips the connection to the server\nenv: SENTRY_WIZARD_SKIP_CONNECT',
    type: 'boolean',
})
    .option('quiet', {
    default: false,
    describe: 'Do not fallback to prompting user asking questions\nenv: SENTRY_WIZARD_QUIET',
    type: 'boolean',
})
    .option('i', {
    alias: 'integration',
    choices: Object.keys(Constants_1.Integration),
    describe: 'Choose the integration to setup\nenv: SENTRY_WIZARD_INTEGRATION',
})
    .option('p', {
    alias: 'platform',
    choices: Object.keys(Constants_1.Platform),
    describe: 'Choose platform(s)\nenv: SENTRY_WIZARD_PLATFORM',
    type: 'array',
})
    .option('u', {
    alias: 'url',
    default: Constants_1.DEFAULT_URL,
    describe: 'The url to your Sentry installation\nenv: SENTRY_WIZARD_URL',
}).argv;
// eslint-disable-next-line @typescript-eslint/no-floating-promises
Setup_1.run(argv);
//# sourceMappingURL=bin.js.map