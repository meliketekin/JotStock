{"version":3,"file":"Initial.js","sourceRoot":"","sources":["../../../lib/Steps/Initial.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,0BAA4B;AAC5B,2BAA6B;AAE7B,6CAAwC;AACxC,uCAAsC;AAEtC,IAAI,aAAa,GAAQ,EAAE,CAAC;AAC5B,IAAI,gBAAgB,GAAQ,EAAE,CAAC;AAE/B,IAAI;IACF,aAAa,GAAG,OAAO,CAAC,IAAI,CAAC,IAAI,CAC/B,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC,EAC/C,IAAI,EACJ,cAAc,CACf,CAAC,CAAC;CACJ;AAAC,WAAM;IACN,6BAA6B;CAC9B;AAED,IAAI;IACF,gBAAgB,GAAG,OAAO,CAAC,IAAI,CAAC,IAAI,CAClC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,EAC5C,IAAI,EACJ,cAAc,CACf,CAAC,CAAC;CACJ;AAAC,WAAM;IACN,8BAA8B;CAC/B;AAED;IAA6B,2BAAQ;IAArC;;IAYA,CAAC;IAXc,sBAAI,GAAjB,UAAkB,QAAiB;;;gBACjC,aAAG,CAAC,0BAA0B,CAAC,CAAC;gBAChC,aAAG,CACD,cAAY,CAAC,CAAC,GAAG,CACf,aAAa,EACb,SAAS,EACT,KAAK,CACN,+BAA0B,CAAC,CAAC,GAAG,CAAC,gBAAgB,EAAE,SAAS,EAAE,KAAK,CAAG,CACvE,CAAC;gBACF,sBAAO,EAAE,EAAC;;;KACX;IACH,cAAC;AAAD,CAAC,AAZD,CAA6B,mBAAQ,GAYpC;AAZY,0BAAO","sourcesContent":["import { Answers } from 'inquirer';\nimport * as _ from 'lodash';\nimport * as path from 'path';\n\nimport { dim } from '../Helper/Logging';\nimport { BaseStep } from './BaseStep';\n\nlet wizardPackage: any = {};\nlet sentryCliPackage: any = {};\n\ntry {\n  wizardPackage = require(path.join(\n    path.dirname(require.resolve('@sentry/wizard')),\n    '..',\n    'package.json',\n  ));\n} catch {\n  // We don't need to have this\n}\n\ntry {\n  sentryCliPackage = require(path.join(\n    path.dirname(require.resolve('@sentry/cli')),\n    '..',\n    'package.json',\n  ));\n} catch {\n  // We don't need to have tahis\n}\n\nexport class Initial extends BaseStep {\n  public async emit(_answers: Answers): Promise<Answers> {\n    dim('Running Sentry Wizard...');\n    dim(\n      `version: ${_.get(\n        wizardPackage,\n        'version',\n        'DEV',\n      )} | sentry-cli version: ${_.get(sentryCliPackage, 'version', 'DEV')}`,\n    );\n    return {};\n  }\n}\n"]}