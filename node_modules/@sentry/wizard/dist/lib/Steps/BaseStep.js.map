{"version":3,"file":"BaseStep.js","sourceRoot":"","sources":["../../../lib/Steps/BaseStep.ts"],"names":[],"mappings":";;;AAGA,6CAA8C;AAE9C;IAEE,kBAAsB,KAAW;QAAX,UAAK,GAAL,KAAK,CAAM;QADvB,aAAQ,GAAY,KAAK,CAAC;QAElC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,KAAK,CAAC;IAC9B,CAAC;IAEM,wBAAK,GAAZ,UAAa,GAAQ;QACnB,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,YAAE,EAAE,CAAC;YACL,eAAK,CAAC,GAAG,CAAC,CAAC;YACX,YAAE,EAAE,CAAC;SACN;IACH,CAAC;IAGH,eAAC;AAAD,CAAC,AAfD,IAeC;AAfqB,4BAAQ","sourcesContent":["import { Answers } from 'inquirer';\n\nimport { Args } from '../Constants';\nimport { debug, nl } from '../Helper/Logging';\n\nexport abstract class BaseStep implements IStep {\n  protected _isDebug: boolean = false;\n  constructor(protected _argv: Args) {\n    this._isDebug = _argv.debug;\n  }\n\n  public debug(msg: any): void {\n    if (this._isDebug) {\n      nl();\n      debug(msg);\n      nl();\n    }\n  }\n\n  public abstract emit(answers: Answers): Promise<Answers>;\n}\n\nexport interface IStep {\n  emit(answers?: Answers): Promise<Answers>;\n}\n"]}