{"version":3,"file":"MobileProject.js","sourceRoot":"","sources":["../../../../lib/Steps/Integrations/MobileProject.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,qCAA2C;AAC3C,0BAA4B;AAE5B,6CAA+D;AAC/D,gDAA2C;AAC3C,qDAAoD;AAEpD;IAA4C,iCAAe;IAA3D;;IA2DA,CAAC;IAxDQ,oCAAY,GAAnB,UAAoB,OAAgB;QAClC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,EAAE,0BAA0B,CAAC,EAAE;YAC/C,MAAM,IAAI,KAAK,CAAC,sBAAsB,CAAC,CAAC;SACzC;QACD,IAAM,wBAAwB,GAAG,CAAC,CAAC,GAAG,CAAC,OAAO,EAAE,0BAA0B,CAAC,CAAC;QAC5E,OAAO,CAAC,CAAC,IAAI,CACX,CAAC,CAAC,MAAM,CAAC,wBAAwB,EAAE,UAAC,MAAe,IAAK,OAAA,MAAM,EAAN,CAAM,CAAC,CAChE,CAAC;IACJ,CAAC;IAEY,uCAAe,GAA5B,UAA6B,OAAgB;;;;;;;wBAC3C,IAAI,CAAC,CAAC,GAAG,CAAC,OAAO,EAAE,0BAA0B,CAAC,EAAE;4BAC9C,sBAAO,CAAC,CAAC,GAAG,CAAC,OAAO,EAAE,0BAA0B,CAAC,EAAC;yBACnD;wBACK,aAAa,GACjB,IAAI,CAAC,KAAK,CAAC,QAAQ;4BACnB,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;4BAClC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC;wBAE7B,KAAA,IAAI,CAAA;6BAAc,aAAa,EAAb,wBAAa;wBAC3B,KAAA,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAA;;4BAClB,qBAAM,IAAI,CAAC,iBAAiB,EAAE,EAAA;;wBAA/B,KAAA,CAAC,SAA8B,CAAC,CAAC,QAAQ,CAAA;;;wBAF7C,GAAK,UAAU,KAE8B,CAAC;wBAExC,wBAAwB,GAAQ,EAAE,CAAC;wBACzC,CAAC,CAAC,IAAI,CAAC,oBAAQ,CAAC,CAAC,OAAO,CAAC,UAAO,QAAkB;;;;;wCAChD,KAAA,wBAAwB,CAAA;wCAAC,KAAA,QAAQ,CAAA;6CAC/B,CAAA,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,EAAE,QAAQ,CAAC,IAAI,CAAC,CAAA,EAAzC,wBAAyC;wCACrC,qBAAM,IAAI,CAAC,wBAAwB,CAAC,QAAQ,CAAC,EAAA;;wCAA7C,KAAA,SAA6C,CAAA;;;wCAC7C,KAAA,KAAK,CAAA;;;wCAHX,MAAkC,KAGvB,CAAC;wCACZ,IACE,wBAAwB,CAAC,QAAQ,CAAC,KAAK,KAAK;4CAC5C,IAAI,CAAC,KAAK,CAAC,SAAS,KAAK,KAAK,EAC9B;4CACA,aAAG,CAAC,wBAAsB,QAAU,CAAC,CAAC;yCACvC;;;;6BACF,CAAC,CAAC;wBACH,sBAAO,EAAE,wBAAwB,0BAAA,EAAE,EAAC;;;;KACrC;IAES,yCAAiB,GAA3B;QACE,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE;YACpB,MAAM,IAAI,KAAK,CAAC,+BAA+B,CAAC,CAAC;SAClD;QACD,OAAO,iBAAM,CAAC;YACZ;gBACE,OAAO,EAAE,8BAAkB,EAAE;gBAC7B,OAAO,EAAE,0CAA0C;gBACnD,IAAI,EAAE,UAAU;gBAChB,IAAI,EAAE,UAAU;aACjB;SACF,CAAC,CAAC;IACL,CAAC;IAKH,oBAAC;AAAD,CAAC,AA3DD,CAA4C,iCAAe,GA2D1D;AA3DqB,sCAAa","sourcesContent":["import { Answers, prompt } from 'inquirer';\nimport * as _ from 'lodash';\n\nimport { getPlatformChoices, Platform } from '../../Constants';\nimport { dim } from '../../Helper/Logging';\nimport { BaseIntegration } from './BaseIntegration';\n\nexport abstract class MobileProject extends BaseIntegration {\n  protected _platforms: Platform[];\n\n  public getPlatforms(answers: Answers): string[] {\n    if (!_.has(answers, 'shouldConfigurePlatforms')) {\n      throw new Error('No platform selected');\n    }\n    const shouldConfigurePlatforms = _.get(answers, 'shouldConfigurePlatforms');\n    return _.keys(\n      _.pickBy(shouldConfigurePlatforms, (active: boolean) => active),\n    );\n  }\n\n  public async shouldConfigure(answers: Answers): Promise<Answers> {\n    if (_.get(answers, 'shouldConfigurePlatforms')) {\n      return _.get(answers, 'shouldConfigurePlatforms');\n    }\n    const isPlatformSet =\n      this._argv.platform &&\n      Array.isArray(this._argv.platform) &&\n      this._argv.platform.length;\n\n    this._platforms = isPlatformSet\n      ? this._argv.platform\n      : (await this._platformSelector()).platform;\n\n    const shouldConfigurePlatforms: any = {};\n    _.keys(Platform).forEach(async (platform: Platform) => {\n      shouldConfigurePlatforms[platform] =\n        _.indexOf(this._platforms, platform) >= 0\n          ? await this._shouldConfigurePlatform(platform)\n          : false;\n      if (\n        shouldConfigurePlatforms[platform] === false &&\n        this._argv.uninstall === false\n      ) {\n        dim(`will not configure ${platform}`);\n      }\n    });\n    return { shouldConfigurePlatforms };\n  }\n\n  protected _platformSelector(): Promise<Answers> {\n    if (this._argv.quiet) {\n      throw new Error('You need to choose a platform');\n    }\n    return prompt([\n      {\n        choices: getPlatformChoices(),\n        message: 'Select the platforms you like to set up:',\n        name: 'platform',\n        type: 'checkbox',\n      },\n    ]);\n  }\n\n  protected abstract _shouldConfigurePlatform(\n    platform: Platform,\n  ): Promise<boolean>;\n}\n"]}