"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __spreadArrays = (this && this.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.NextJs = void 0;
/* eslint-disable max-lines */
var fs = require("fs");
var inquirer_1 = require("inquirer");
var _ = require("lodash");
var path = require("path");
var semver_1 = require("semver");
var Logging_1 = require("../../Helper/Logging");
var SentryCli_1 = require("../../Helper/SentryCli");
var BaseIntegration_1 = require("./BaseIntegration");
var COMPATIBLE_NEXTJS_VERSIONS = '>=10.0.8 <13.0.0';
var COMPATIBLE_SDK_VERSIONS = '>=7.3.0';
var PROPERTIES_FILENAME = 'sentry.properties';
var SENTRYCLIRC_FILENAME = '.sentryclirc';
var GITIGNORE_FILENAME = '.gitignore';
var CONFIG_DIR = 'configs/';
var MERGEABLE_CONFIG_INFIX = 'wizardcopy';
// for those files which can go in more than one place, the list of places they
// could go (the first one which works will be used)
var TEMPLATE_DESTINATIONS = {
    '_error.js': ['pages', 'src/pages'],
    'next.config.js': ['.'],
    'sentry.server.config.js': ['.'],
    'sentry.client.config.js': ['.'],
};
var appPackage = {};
try {
    appPackage = require(path.join(process.cwd(), 'package.json'));
}
catch (_a) {
    // We don't need to have this
}
var NextJs = /** @class */ (function (_super) {
    __extends(NextJs, _super);
    function NextJs(_argv) {
        var _this = _super.call(this, _argv) || this;
        _this._argv = _argv;
        _this._sentryCli = new SentryCli_1.SentryCli(_this._argv);
        return _this;
    }
    NextJs.prototype.emit = function (answers) {
        return __awaiter(this, void 0, void 0, function () {
            var dsn, sentryCliProps, configDirectory;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        dsn = _.get(answers, ['config', 'dsn', 'public'], null);
                        Logging_1.nl();
                        sentryCliProps = this._sentryCli.convertAnswersToProperties(answers);
                        return [4 /*yield*/, this._createSentryCliConfig(sentryCliProps)];
                    case 1:
                        _a.sent();
                        configDirectory = path.join(__dirname, '..', '..', '..', 'NextJs', CONFIG_DIR);
                        if (fs.existsSync(configDirectory)) {
                            this._createNextConfig(configDirectory, dsn);
                        }
                        else {
                            Logging_1.debug("Couldn't find " + configDirectory + ", probably because you ran this from inside of `/lib` rather than `/dist`");
                            Logging_1.nl();
                        }
                        Logging_1.l('For more information, see https://docs.sentry.io/platforms/javascript/guides/nextjs/');
                        Logging_1.nl();
                        return [2 /*return*/, {}];
                }
            });
        });
    };
    NextJs.prototype.shouldConfigure = function (_answers) {
        return __awaiter(this, void 0, void 0, function () {
            var userAnswers;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (this._shouldConfigure) {
                            return [2 /*return*/, this._shouldConfigure];
                        }
                        Logging_1.nl();
                        userAnswers = { continue: true };
                        if (!((!this._checkPackageVersion('next', COMPATIBLE_NEXTJS_VERSIONS, true) ||
                            !this._checkPackageVersion('@sentry/nextjs', COMPATIBLE_SDK_VERSIONS, true)) &&
                            !this._argv.quiet)) return [3 /*break*/, 2];
                        return [4 /*yield*/, inquirer_1.prompt({
                                message: 'There were errors during your project checkup, do you still want to continue?',
                                name: 'continue',
                                default: false,
                                type: 'confirm',
                            })];
                    case 1:
                        userAnswers = _a.sent();
                        _a.label = 2;
                    case 2:
                        Logging_1.nl();
                        if (!userAnswers['continue']) {
                            throw new Error('Please install the required dependencies to continue.');
                        }
                        this._shouldConfigure = Promise.resolve({ nextjs: true });
                        // eslint-disable-next-line @typescript-eslint/unbound-method
                        return [2 /*return*/, this.shouldConfigure];
                }
            });
        });
    };
    NextJs.prototype._createSentryCliConfig = function (cliProps) {
        return __awaiter(this, void 0, void 0, function () {
            var authToken, cliPropsToWrite, _a, _b;
            return __generator(this, function (_c) {
                switch (_c.label) {
                    case 0:
                        authToken = cliProps["auth/token"], cliPropsToWrite = __rest(cliProps, ['auth/token']);
                        if (!authToken) return [3 /*break*/, 5];
                        _c.label = 1;
                    case 1:
                        _c.trys.push([1, 3, , 4]);
                        return [4 /*yield*/, fs.promises.appendFile(SENTRYCLIRC_FILENAME, this._sentryCli.dumpConfig({ auth: { token: authToken } }))];
                    case 2:
                        _c.sent();
                        Logging_1.green("\u2713 Successfully added the auth token to " + SENTRYCLIRC_FILENAME);
                        return [3 /*break*/, 4];
                    case 3:
                        _a = _c.sent();
                        Logging_1.red("\u26A0 Could not add the auth token to " + SENTRYCLIRC_FILENAME + ", " +
                            ("please add it to identify your user account:\n" + authToken));
                        Logging_1.nl();
                        return [3 /*break*/, 4];
                    case 4: return [3 /*break*/, 6];
                    case 5:
                        Logging_1.red("\u26A0 Did not find an auth token, please add your token to " + SENTRYCLIRC_FILENAME);
                        Logging_1.l('To generate an auth token, visit https://sentry.io/settings/account/api/auth-tokens/');
                        Logging_1.l('To learn how to configure Sentry CLI, visit ' +
                            'https://docs.sentry.io/platforms/javascript/guides/nextjs/manual-setup/#configure-sentry-cli');
                        _c.label = 6;
                    case 6: return [4 /*yield*/, this._addToGitignore(SENTRYCLIRC_FILENAME, "\u26A0 Could not add " + SENTRYCLIRC_FILENAME + " to " + GITIGNORE_FILENAME + ", " +
                            'please add it to not commit your auth key.')];
                    case 7:
                        _c.sent();
                        _c.label = 8;
                    case 8:
                        _c.trys.push([8, 10, , 11]);
                        return [4 /*yield*/, fs.promises.writeFile("./" + PROPERTIES_FILENAME, this._sentryCli.dumpProperties(cliPropsToWrite))];
                    case 9:
                        _c.sent();
                        Logging_1.green("\u2713 Successfully created sentry.properties");
                        return [3 /*break*/, 11];
                    case 10:
                        _b = _c.sent();
                        Logging_1.red("\u26A0 Could not add org and project data to " + PROPERTIES_FILENAME);
                        Logging_1.l('See docs for a manual setup: https://docs.sentry.io/platforms/javascript/guides/nextjs/manual-setup/#configure-sentry-cli');
                        return [3 /*break*/, 11];
                    case 11:
                        Logging_1.nl();
                        return [2 /*return*/];
                }
            });
        });
    };
    NextJs.prototype._addToGitignore = function (filepath, errorMsg) {
        return __awaiter(this, void 0, void 0, function () {
            var _a;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        _b.trys.push([0, 2, , 3]);
                        return [4 /*yield*/, fs.promises.appendFile(GITIGNORE_FILENAME, "\n# Sentry\n" + filepath + "\n")];
                    case 1:
                        _b.sent();
                        Logging_1.green("\u2713 " + filepath + " added to " + GITIGNORE_FILENAME);
                        return [3 /*break*/, 3];
                    case 2:
                        _a = _b.sent();
                        Logging_1.red(errorMsg);
                        return [3 /*break*/, 3];
                    case 3: return [2 /*return*/];
                }
            });
        });
    };
    NextJs.prototype._createNextConfig = function (configDirectory, dsn) {
        var templates = fs.readdirSync(configDirectory);
        for (var _i = 0, templates_1 = templates; _i < templates_1.length; _i++) {
            var template = templates_1[_i];
            this._setTemplate(configDirectory, template, TEMPLATE_DESTINATIONS[template], dsn);
        }
        Logging_1.red('⚠ Performance monitoring is enabled capturing 100% of transactions.\n' +
            '  Learn more in https://docs.sentry.io/product/performance/');
        Logging_1.nl();
    };
    NextJs.prototype._setTemplate = function (configDirectory, templateFile, destinationOptions, dsn) {
        var templatePath = path.join(configDirectory, templateFile);
        for (var _i = 0, destinationOptions_1 = destinationOptions; _i < destinationOptions_1.length; _i++) {
            var destinationDir = destinationOptions_1[_i];
            if (!fs.existsSync(destinationDir)) {
                continue;
            }
            var destinationPath = path.join(destinationDir, templateFile);
            // in case the file in question already exists, we'll make a copy with
            // `MERGEABLE_CONFIG_INFIX` inserted just before the extension, so as not
            // to overwrite the existing file
            var mergeableFilePath = path.join(destinationDir, this._spliceInPlace(templateFile.split('.'), -1, 0, MERGEABLE_CONFIG_INFIX).join('.'));
            if (!fs.existsSync(destinationPath)) {
                this._fillAndCopyTemplate(templatePath, destinationPath, dsn);
            }
            else if (!fs.existsSync(mergeableFilePath)) {
                this._fillAndCopyTemplate(templatePath, mergeableFilePath, dsn);
                Logging_1.red("File `" + templateFile + "` already exists, so created `" + mergeableFilePath + "`.\n" +
                    'Please merge those files.');
                Logging_1.nl();
            }
            else {
                Logging_1.red("Both `" + templateFile + "` and `" + mergeableFilePath + "` already exist.\n" +
                    'Please merge those files.');
                Logging_1.nl();
            }
            return;
        }
        Logging_1.red("Could not find appropriate destination for `" + templateFile + "`. Tried: " + destinationOptions + ".");
        Logging_1.nl();
    };
    NextJs.prototype._fillAndCopyTemplate = function (sourcePath, targetPath, dsn) {
        var templateContent = fs.readFileSync(sourcePath).toString();
        var filledTemplate = templateContent.replace('___DSN___', dsn);
        fs.writeFileSync(targetPath, filledTemplate);
    };
    NextJs.prototype._checkPackageVersion = function (packageName, acceptableVersions, canBeLatest) {
        var depsVersion = _.get(appPackage, ['dependencies', packageName]);
        var devDepsVersion = _.get(appPackage, ['devDependencies', packageName]);
        if (!depsVersion && !devDepsVersion) {
            Logging_1.red("\u2717 " + packageName + " isn't in your dependencies.");
            Logging_1.red('  Please install it with yarn/npm.');
            return false;
        }
        else if (!this._fulfillsVersionRange(depsVersion, acceptableVersions, canBeLatest) &&
            !this._fulfillsVersionRange(devDepsVersion, acceptableVersions, canBeLatest)) {
            Logging_1.red("\u2717 Your `package.json` specifies a version of `" + packageName + "` outside of the compatible version range " + acceptableVersions + ".\n");
            return false;
        }
        else {
            Logging_1.green("\u2713 A compatible version of `" + packageName + "` is specified in `package.json`.");
            return true;
        }
    };
    NextJs.prototype._fulfillsVersionRange = function (version, acceptableVersions, canBeLatest) {
        if (version === 'latest') {
            return canBeLatest;
        }
        var cleanedUserVersion, isRange;
        if (semver_1.valid(version)) {
            cleanedUserVersion = semver_1.valid(version);
            isRange = false;
        }
        else if (semver_1.validRange(version)) {
            cleanedUserVersion = semver_1.validRange(version);
            isRange = true;
        }
        return (
        // If the given version is a bogus format, this will still be undefined and we'll automatically reject it
        !!cleanedUserVersion &&
            (isRange
                ? semver_1.subset(cleanedUserVersion, acceptableVersions)
                : semver_1.satisfies(cleanedUserVersion, acceptableVersions)));
    };
    NextJs.prototype._spliceInPlace = function (arr, start, deleteCount) {
        var inserts = [];
        for (var _i = 3; _i < arguments.length; _i++) {
            inserts[_i - 3] = arguments[_i];
        }
        arr.splice.apply(arr, __spreadArrays([start, deleteCount], inserts));
        return arr;
    };
    return NextJs;
}(BaseIntegration_1.BaseIntegration));
exports.NextJs = NextJs;
//# sourceMappingURL=NextJs.js.map