{"version":3,"file":"client.js","sourceRoot":"","sources":["../../src/js/client.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,cAAc,CAAC;AAE1C,OAAO,EAAE,kBAAkB,EAAE,MAAM,WAAW,CAAC;AAE/C,OAAO,EAAE,MAAM,EAAE,MAAM,WAAW,CAAC;AAEnC;;;;;GAKG;AACH,MAAM,OAAO,iBAAkB,SAAQ,UAGtC;IACC;;;OAGG;IACH,YAAmB,OAA2B;QAC5C,KAAK,CAAC,kBAAkB,EAAE,OAAO,CAAC,CAAC;IACrC,CAAC;IAED;;;OAGG;IACI,WAAW;QAChB,IAAI,CAAC,WAAW,EAAE,CAAC,WAAW,EAAE,CAAC;IACnC,CAAC;IAED;;OAEG;IACI,KAAK;QACV,oGAAoG;QACpG,OAAO,KAAK,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC,MAAe,EAAE,EAAE;YAC5C,OAAO,MAAM,CAAC,cAAc,EAAE,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,MAAM,CAAyB,CAAC;QAC5E,CAAC,CAAC,CAAC;IACL,CAAC;CACF","sourcesContent":["import { BaseClient } from '@sentry/core';\n\nimport { ReactNativeBackend } from './backend';\nimport { ReactNativeOptions } from './options';\nimport { NATIVE } from './wrapper';\n\n/**\n * The Sentry React Native SDK Client.\n *\n * @see ReactNativeOptions for documentation on configuration options.\n * @see SentryClient for usage documentation.\n */\nexport class ReactNativeClient extends BaseClient<\n  ReactNativeBackend,\n  ReactNativeOptions\n> {\n  /**\n   * Creates a new React Native SDK instance.\n   * @param options Configuration options for this SDK.\n   */\n  public constructor(options: ReactNativeOptions) {\n    super(ReactNativeBackend, options);\n  }\n\n  /**\n   * If native client is available it will trigger a native crash.\n   * Use this only for testing purposes.\n   */\n  public nativeCrash(): void {\n    this._getBackend().nativeCrash();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public close(): PromiseLike<boolean> {\n    // As super.close() flushes queued events, we wait for that to finish before closing the native SDK.\n    return super.close().then((result: boolean) => {\n      return NATIVE.closeNativeSdk().then(() => result) as PromiseLike<boolean>;\n    });\n  }\n}\n"]}