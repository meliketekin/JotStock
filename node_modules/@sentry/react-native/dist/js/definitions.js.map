{"version":3,"file":"definitions.js","sourceRoot":"","sources":["../../src/js/definitions.ts"],"names":[],"mappings":"","sourcesContent":["import { Breadcrumb, Package } from '@sentry/types';\n\nimport { ReactNativeOptions } from './options';\n\nexport type NativeAppStartResponse = {\n  isColdStart: boolean;\n  appStartTime: number;\n  didFetchAppStart: boolean;\n};\n\nexport type NativeFramesResponse = {\n  totalFrames: number;\n  slowFrames: number;\n  frozenFrames: number;\n};\n\nexport type NativeReleaseResponse = {\n  build: string;\n  id: string;\n  version: string;\n};\n\nexport type NativeDeviceContextsResponse = {\n  [key: string]: Record<string, unknown>;\n};\n\ninterface SerializedObject {\n  [key: string]: string;\n}\n\nexport interface SentryNativeBridgeModule {\n  nativeClientAvailable: boolean;\n\n  addBreadcrumb(breadcrumb: Breadcrumb): void;\n  captureEnvelope(\n    payload:\n      | string\n      | {\n          header: Record<string, unknown>;\n          payload: Record<string, unknown>;\n        }\n  ): PromiseLike<boolean>;\n  clearBreadcrumbs(): void;\n  crash(): void;\n  closeNativeSdk(): PromiseLike<void>;\n  disableNativeFramesTracking(): void;\n  fetchNativeRelease(): Promise<{\n    build: string;\n    id: string;\n    version: string;\n  }>;\n  fetchNativeSdkInfo(): PromiseLike<Package>;\n  fetchNativeDeviceContexts(): PromiseLike<NativeDeviceContextsResponse>;\n  fetchNativeAppStart(): PromiseLike<NativeAppStartResponse | null>;\n  fetchNativeFrames(): PromiseLike<NativeFramesResponse | null>;\n  getStringBytesLength(str: string): Promise<number>;\n  initNativeSdk(options: ReactNativeOptions): Promise<boolean>;\n  setUser(\n    defaultUserKeys: SerializedObject | null,\n    otherUserKeys: SerializedObject | null\n  ): void;\n  setContext(key: string, value: SerializedObject | null): void;\n  setExtra(key: string, value: string): void;\n  setTag(key: string, value: string): void;\n}\n"]}